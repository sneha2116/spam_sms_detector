import pandas as pd
import zipfile
import os
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import accuracy_score, confusion_matrix, classification_report

# 1. Unzip the file
with zipfile.ZipFile('/mnt/data/spam.csv.zip', 'r') as zip_ref:
    zip_ref.extractall('/mnt/data/')

# 2. Load the data
# The extracted file is likely named "spam.csv"
df = pd.read_csv('/mnt/data/spam.csv', encoding='latin-1')

# Check what columns we have
print(df.columns)

# 3. Preprocess
# Keep only needed columns (assuming first two columns: label and message)
df = df[['v1', 'v2']]
df.columns = ['label', 'text']

# Encode labels: ham = 0, spam = 1
df['label'] = df['label'].map({'ham': 0, 'spam': 1})

# 4. Train-test split
X_train, X_test, y_train, y_test = train_test_split(df['text'], df['label'], test_size=0.2, random_state=42)

# 5. Text Vectorization
vectorizer = TfidfVectorizer(stop_words='english')
X_train_vec = vectorizer.fit_transform(X_train)
X_test_vec = vectorizer.transform(X_test)

# 6. Train the model
model = LogisticRegression()
model.fit(X_train_vec, y_train)

# 7. Predict
y_pred = model.predict(X_test_vec)

# 8. Evaluate
print("Accuracy:", accuracy_score(y_test, y_pred))
print("\nConfusion Matrix:\n", confusion_matrix(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))
